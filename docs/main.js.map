{"version":3,"sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/store/router/reducers.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,0C;;;;;;;;;;;;;;;;;ACXuD;;;AAEvD,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAC,EAAE;QACP,UAAU,EAAE,UAAU;QACtB,SAAS,EAAE,MAAM;KAClB;IACD,EAAE,IAAI,EAAC,SAAS;QACd,YAAY,EAAC,GAAG,EAAE,CAAC,gKAAgC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,YAAY,CAAC;KAC9E;CACF,CAAC;AAQK,MAAM,gBAAgB;;gFAAhB,gBAAgB;6GAAhB,gBAAgB;iHALlB,CAAC,iEAAoB,CAAC,MAAM,EAAE;gBACrC,iBAAiB,EAAE,SAAS;aAC/B,CAAC,CAAC,EACS,yDAAY;mIAEX,gBAAgB,oFAFjB,yDAAY;;;;;;;;;;;;;;;;;;;;ACRjB,MAAM,YAAY;IAIvB;QAFA,UAAK,GAAG,QAAQ;IAIhB,CAAC;;wEANU,YAAY;0GAAZ,YAAY;QCTzB,2EAA+B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACC2B;AAC1D,iEAAiE;AAEZ;AACuB;AAEpB;AACT;AACgC;AAErC;AACiB;AACD;AACZ;AACmB;AACd;;;;;;;AAEnD,8EAA8E;AAsBvE,MAAM,SAAS;;kEAAT,SAAS;sGAAT,SAAS,cAFR,wDAAY;2GADb,EAAE,YAbJ;YACP,yFAAkC,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,CAAC;YACvD,iEAAgB;YAChB,iCAAiC;YACjC,yFAAuB;YACvB,iEAAa;YACb,wFAAwB;YACxB,4DAAmB,CAAC,4DAAQ,CAAC;YAC7B,iFAA8B,CAAC,EAAE,MAAM,EAAE,EAAE,EAAE,OAAO,EAAE,6EAAsB,EAAE,CAAC;YAC/E,iEAAqB,CAAC,EAAE,CAAC;YACzB,oFAAmC,EAAE;SAEtC;mIAIU,SAAS,mBAlBlB,wDAAY,mFAIZ,iEAAgB;QAChB,iCAAiC;QACjC,yFAAuB;QACvB,iEAAa;QACb,wFAAwB;;;;;;;;;;;;;;;;;AC9B2C;AAOhE,MAAM,QAAQ,GAA4B;IAC7C,MAAM,EAAE,6DAAa;CACxB,CAAC;;;;;;;;;;;;;;;;ACTF,gFAAgF;AAChF,mEAAmE;AACnE,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,sEAAsE;;;;;;;;;;;;;;;;;;ACfvB;AAGF;AACY;AAEzD,IAAI,6EAAsB,EAAE;IAC1B,6DAAc,EAAE,CAAC;CAClB;AAED,QAAQ,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,GAAG,EAAE;IACjD,wEAAwB,CAAC,eAAe,CAAC,sDAAS,CAAC;SAClD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  { path:'',\n    redirectTo: '/tickers', \n    pathMatch: 'full'\n  },\n  { path:'tickers', \n    loadChildren:() => import('./stocks/stocks.module').then(m => m.StocksModule)\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {\n    initialNavigation: 'enabled'\n})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { isPlatformBrowser } from '@angular/common';\nimport { Component, Inject, OnInit, PLATFORM_ID } from '@angular/core';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  \n  title = 'client'\n\n  constructor() {\n\n  }\n \n}\n","<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n//import { SocketIoConfig, SocketIoModule } from 'ngx-socket-io';\n\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { StoreModule } from '@ngrx/store';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { environment } from '../environments/environment';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreRouterConnectingModule } from '@ngrx/router-store';\nimport { reducers } from './store/router/reducers';\n\n//const config: SocketIoConfig = { url: 'http://localhost:3000/',options: {}};\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule.withServerTransition({ appId: 'client' }),\n    AppRoutingModule,\n    //SocketIoModule.forRoot(config),\n    BrowserAnimationsModule,\n    MatIconModule,\n    MatProgressSpinnerModule,\n    StoreModule.forRoot(reducers),\n    StoreDevtoolsModule.instrument({ maxAge: 25, logOnly: environment.production }),\n    EffectsModule.forRoot([]),\n    StoreRouterConnectingModule.forRoot(),\n  \n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { routerReducer, RouterReducerState } from \"@ngrx/router-store\";\nimport { ActionReducerMap } from \"@ngrx/store\";\n\n\nexport interface State {\n    router: RouterReducerState<any>,\n}\nexport const reducers: ActionReducerMap<State> = {\n    router: routerReducer\n};","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  platformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n});\n"],"sourceRoot":"webpack:///"}